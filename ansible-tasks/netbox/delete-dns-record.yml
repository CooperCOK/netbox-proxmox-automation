  - name: Find DNS record in NetBox by name
    local_action:
      module: uri
      url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}/api/plugins/netbox-dns/records/?zone={{ proxmox_vm_cfg.default_dns_domainname }}&name={{ item }}"
      method: GET
      headers:
        Authorization: "Token {{ secrets_cfg.netbox.api_token }}"
        Accept: application/json
        Content-Type: application/json
      body_format: json
#      body:
#        zone: "{{ nb_dns_plugin_zn[proxmox_vm_cfg.default_dns_domainname].zone_id }}"
#        type: A
#        name: test1
      status_code: 200
      validate_certs: no
    with_items: "{{ vm_config_remove }}"
    register: dns_record_find
    failed_when: dns_record_find.status not in [200, 201, 204]

#  - name: blahblahblah
#    debug:
#      msg: "blahblah: {{ item }} ||| {{ item.json.results }} ||| {{ item.json.results[0].id }} ||| {{ item.json.results[0].name }}"
#    loop: "{{ dns_record_find.results }}"

  - name: Store found DNS record id from NetBox
    set_fact:
      nb_dns_plugin_delete_record_ids: "{{ nb_dns_plugin_delete_record_ids | combine({item.json.results[0].name: item.json.results[0].id}) }}"
    loop: "{{ dns_record_find.results }}"

#  - name: show us the stuff
#    debug:
#      msg: "the stuff: {{ nb_dns_plugin_delete_record_ids }}"
#

  - name: Delete DNS 'A' record(s) in Netbox by id
    ansible.builtin.uri:
      url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}/api/plugins/netbox-dns/records/{{ nb_dns_plugin_delete_record_ids[item] }}"
      method: DELETE
      headers:
        Authorization: "Token {{ secrets_cfg.netbox.api_token }}"
        Accept: application/json
        Content-Type: application/json
      body_format: json
      #body:
      #  zone: "{{ nb_dns_plugin_zn[proxmox_vm_cfg.default_dns_domainname].zone_id }}"
      #  type: A
      #  name: "{{ item }}"
      status_code: 204
      validate_certs: no
      follow_redirects: all
    with_items: "{{ nb_dns_plugin_delete_record_ids }}"
    register: dns_record_delete
    failed_when: dns_record_delete.status not in [200, 201, 204, 301]

# when status == 204, set changed flag to true -- this will set into motion all of our DNS change plays
  - name: Set flag after DNS delete record
    set_fact:
      nb_dns_plugin_deleted: true
    loop: "{{ dns_record_delete.results }}"
    when: item.status in [200, 201, 204]

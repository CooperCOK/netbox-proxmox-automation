  - name: Find DNS record in NetBox by name
    local_action:
      module: uri
      url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}/api/plugins/netbox-dns/records/?zone={{ proxmox_vm_cfg.default_dns_domainname }}&name=test1"
      method: GET
      headers:
        Authorization: "Token {{ secrets_cfg.netbox.api_token }}"
        Accept: application/json
        Content-Type: application/json
      body_format: json
      body:
        zone: "{{ nb_dns_plugin_zn[proxmox_vm_cfg.default_dns_domainname].zone_id }}"
        type: A
        name: test1
      status_code: 204
      validate_certs: no
    register: dns_record_find
    failed_when: dns_record_find.status not in [200, 201, 204]

  - name: Store found DNS record id from NetBox
    set_fact:
      nb_dns_plugin_delete_record_id: "{{ dns_record_find.json.results[0].id }}"

  - name: Delete DNS 'A' record in Netbox by id
    ansible.builtin.uri:
      url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}/api/plugins/netbox-dns/records/{{ nb_dns_plugin_delete_record_id }}"
      method: DELETE
      headers:
        Authorization: "Token {{ secrets_cfg.netbox.api_token }}"
        Accept: application/json
        Content-Type: application/json
      body_format: json
      body:
        zone: "{{ nb_dns_plugin_zn[proxmox_vm_cfg.default_dns_domainname].zone_id }}"
        type: A
        name: test1
      status_code: 204
      validate_certs: no
      follow_redirects: all
    register: dns_record_create
    failed_when: dns_record_create.status not in [200, 201, 204, 301]

# when status == 204, set changed flag to true -- this will set into motion all of our DNS change plays
  - name: Set flag after DNS delete record
    set_fact:
      nb_dns_plugin_deleted: true
    when: dns_record_create.status | int == 204

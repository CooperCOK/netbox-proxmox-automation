  # desired format, e.g.: local-lvm:vm-1000-disk-0
  #- name: disk stuff
  #  debug:
  #    msg: "item 0: {{ item.0 }} ||| item 1: {{ item.1 }} ||| disk index: {{ lookup('ansible.utils.index_of', item.0.disks, 'eq', item.1) }}"
  #  loop: "{{ proxmox_vm_cfg.vms | subelements('disks') }}"

  - name: Collect VM(s) disks
    set_fact:
      nb_vm_config_disks: "{{ nb_vm_config_disks + [{'name': item.0.name, 'disk_size': item.1, 'disk_id': lookup('ansible.utils.index_of', item.0.disks, 'eq', item.1)}] }}"
    loop: "{{ proxmox_vm_cfg.vms | subelements('disks') }}"

  #- name: show vm disks
  #  debug:
  #    msg: "vm disks: {{ nb_vm_config_disks }}"

  - name: Create virtual disks for VM(s) in NetBox
    netbox.netbox.netbox_virtual_disk:
      netbox_url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}"
      netbox_token: "{{ secrets_cfg.netbox.api_token }}"
      data:
        virtual_machine: "{{ item.name }}"
        name: "scsi{{ item.disk_id }}"
        size: "{{ item.disk_size }}"
      state: present
    loop: "{{ nb_vm_config_disks }}"
    when: vm_config[item.name] is defined and nb_vm_created[item.name] is defined
    register: nb_vm_disks

#  - name: show created
#    debug:
#      msg: "vm disks: {{ nb_vm_disks }}"

  - name: Collect configured VM(s) disks
    set_fact:
      nb_vm_collected_disks: "{{ nb_vm_collected_disks + [{'name': item['invocation']['module_args']['data']['virtual_machine'], 'disk_name': item['invocation']['module_args']['data']['name'], 'disk_size': item['invocation']['module_args']['data']['size']}] }}"
    loop: "{{ nb_vm_disks.results }}"
    when: item.changed

#  - name: Show it
#    debug:
#      msg: "blah: {{ nb_vm_collected_disks }}"

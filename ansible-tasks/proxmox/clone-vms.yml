  - name: Create each VM from a full clone of template
    community.general.proxmox_kvm:
      node: "{{ secrets_cfg.proxmox.node }}"
      api_user: "{{ secrets_cfg.proxmox.api_user }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret }}"
      api_host: "{{ secrets_cfg.proxmox.api_host }}"
      clone: "{{ vm_config[item].template }}"
      name: "{{ item }}"
      agent: 'enabled=1'
      storage: "{{ vm_config[item].storage if vm_config[item].storage is defined else proxmox_vm_cfg.default_storage }}"
      state: present
      timeout: 120
    with_items: "{{ vm_config }}"
    when: not item in collected_proxmox_vms and (item in nb_vm_inventory_staged or item in nb_vm_created)
    register: clone_vms_job
    async: 180
    poll: 0

  - name: Wait for VM cloning processes to finish
    async_status:
      #id: "{{ item.ansible_job_id }}"
      jid: "{{ item.ansible_job_id }}" # ansible version > 2.8
    register: _jobs_alias_vc_0
    until: _jobs_alias_vc_0.finished
    retries: 60
    delay: 5
    with_items: "{{ clone_vms_job.results }}"
    when: item.ansible_job_id is defined

  - name: CLONE VMS JOB
    debug:
      msg: "CLONE VMS JOB {{ item }} ||| {{ item.item }}"
    #when: item.changed
    with_items: "{{ clone_vms_job.results }}"

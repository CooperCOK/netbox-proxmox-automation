  - name: Capture name of VMs to delete
    set_fact:
      nb_remove_vms: "{{ nb_remove_vms | combine({item['invocation']['module_args']['name']: True }) }}"
    with_items: "{{ _sjobs_alias_vc_0.results }}"
    when: item.changed

  - name: NetBox VMs status to Decommissioning
    netbox.netbox.netbox_virtual_machine:
      netbox_url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}"
      netbox_token: "{{ secrets_cfg.netbox.api_token }}"
      data:
        name: "{{ item }}"
        status: "Decommissioning"
      state: present
    with_items: "{{ nb_remove_vms }}"
    #when: item.changed

  - name: Remove specified VMs
    community.general.proxmox_kvm:
      node: "{{ secrets_cfg.proxmox.node }}"
      api_user: "{{ secrets_cfg.proxmox.api_user }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret }}"
      api_host: "{{ secrets_cfg.proxmox.api_host }}"
      vmid: "{{ item.vmid }}"
      state: absent
      force: true
    with_items: "{{ _sjobs_alias_vc_0.results }}"
    when: item.changed
    register: remove_vms_job
    async: 180
    poll: 0

  - name: Wait for VM removal
    async_status:
      #id: "{{ item.ansible_job_id }}"
      jid: "{{ item.ansible_job_id }}" # ansible version > 2.8
    register: _rjobs_alias_vc_0
    until: _rjobs_alias_vc_0.finished
    retries: 100
    delay: 5
    with_items: "{{ remove_vms_job.results }}"
    when: item.ansible_job_id is defined

  - name: NetBox Remove VMs
    netbox.netbox.netbox_virtual_machine:
      netbox_url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}"
      netbox_token: "{{ secrets_cfg.netbox.api_token }}"
      data:
        name: "{{ item }}"
      state: absent
    with_items: "{{ nb_remove_vms }}"

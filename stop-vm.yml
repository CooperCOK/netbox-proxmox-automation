---
- name: STOP VM TASKS
  hosts: proxmox

  tasks:
  - name: Read secrets from configuration
    include_vars:
      file: secrets.yml
      name: secrets_cfg

  - name: Read Proxmox VM Configuration
    include_vars:
      file: vms.yml
      name: proxmox_vm_cfg

#  - debug:
#      msg: "stuff is {{ proxmox_vm_cfg }}"

  - name: Get status of VMs
    community.general.proxmox_vm_info:
      node: "{{ secrets_cfg.proxmox.node }}"
      api_user: "{{ secrets_cfg.proxmox.api_user }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret }}"
      api_host: "{{ secrets_cfg.proxmox.api_host }}"
      name: "{{ item.name }}"
      type: qemu
    with_items: "{{ proxmox_vm_cfg.vms }}"
    register: vm_status

  - name: Stop specified VMs
    community.general.proxmox_kvm:
      node: "{{ secrets_cfg.proxmox.node }}"
      api_user: "{{ secrets_cfg.proxmox.api_user }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret }}"
      api_host: "{{ secrets_cfg.proxmox.api_host }}"
      name: "{{ item.name }}"
      state: stopped
      force: true
    with_items: "{{ vm_status.results.proxmox_vms }}"
    when: item.proxmox_vms is defined and (item.proxmox_vms | length > 0)
    register: stop_vms_job
    async: 180
    poll: 0

  - name: Wait for VM stop processes to finish
    async_status:
     #id: "{{ item.ansible_job_id }}"
      jid: "{{ item.ansible_job_id }}" # ansible version > 2.8
    register: _sjobs_alias_vc_0
    until: _sjobs_alias_vc_0.finished
    retries: 100
    delay: 5
    with_items: "{{ stop_vms_job }}"
    when: item.ansible_job_id is defined

  - name: Remove specified VMs
    community.general.proxmox_kvm:
      node: "{{ secrets_cfg.proxmox.node }}"
      api_user: "{{ secrets_cfg.proxmox.api_user }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret }}"
      api_host: "{{ secrets_cfg.proxmox.api_host }}"
      name: "{{ item.proxmox_vms[0].name }}"
      #vmid: "{{ item.proxmox_vms.vmid }}"
      state: absent
      force: true
    with_items: "{{ vm_status.results }}"
    when: item.proxmox_vms is defined and (item.proxmox_vms | length > 0)
    register: remove_vms_job
    async: 180
    poll: 0

  - name: Wait for VM removal
    async_status:
      #id: "{{ item.ansible_job_id }}"
      jid: "{{ item.ansible_job_id }}" # ansible version > 2.8
    register: _rjobs_alias_vc_0
    until: _rjobs_alias_vc_0.finished
    retries: 100
    delay: 5
    with_items: "{{ remove_vms_job.results }}"
    when: item.ansible_job_id is defined

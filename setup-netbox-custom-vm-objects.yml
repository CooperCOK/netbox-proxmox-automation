- name: "NetBox-Proxmox VM Manager"
  connection: local
  hosts: localhost
  gather_facts: False
  
  vars:
    collected_proxmox_vm_templates: {}
    proxmox_vm_create: []
    proxmox_vm_delete: []
    proxmox_all_vm_interfaces: {}
    proxmox_vm_interfaces_prefix: []
    proxmox_vm_interfaces_ip: []
    nb_vm_created: {}
    nb_vm_interface_assigned_ip: {}
    nb_remove_vms: {}
    proxmox_ipconfig_dict: {}
    gw_last_quad: 1

  tasks:
  - name: Collect secrets
    include_vars:
      file: secrets.yml
      name: secrets_cfg

  - name: Read Proxmox VM Configuration
    include_vars:
      file: vms.yml
      name: proxmox_vm_cfg

  - name: Init dict(s)
    set_fact:
      vm_config: {}
      vm_config_interfaces: {}
      vm_config_remove: {}
      the_fact: {}
      nb_selected_vm: ''
      nb_selected_interface: ''
      nb_ipconfig_key_name: ''
      proxmox_vm_templates: []

  - name: Discover all existing virtual machines
    community.general.proxmox_vm_info:
      api_host: "{{ secrets_cfg.proxmox.api_host | default(omit) }}"
      api_user: "{{ secrets_cfg.proxmox.api_user | default(omit) }}"
      api_token_id: "{{ secrets_cfg.proxmox.api_token_id | default(omit) }}"
      api_token_secret: "{{ secrets_cfg.proxmox.api_token_secret | default(omit) }}"
      #node: "{{ secrets_cfg.proxmox.node }}"
    register: proxmox_discovered_vms

  - name: Discover / Collect Proxmox VMs
    set_fact:
      collected_proxmox_vm_templates: "{{ collected_proxmox_vm_templates | combine({item.name: True}) }}"
    loop: "{{ proxmox_discovered_vms.proxmox_vms }}"
    when: item.template

  - name: Set Proxmox VM collected templates
    set_fact:
      proxmox_vm_templates: "{{ proxmox_vm_templates + [ item + ',' + item ] }}"
    with_items: "{{ collected_proxmox_vm_templates }}"

  - name: Create Proxmox VM template choices
    netbox.netbox.netbox_custom_field_choice_set:
      netbox_url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}"
      netbox_token: "{{ secrets_cfg.netbox.api_token }}"
      data:
        name: "Proxmox VM Templates"
        description: "Proxmox VM Templates"
        extra_choices: "{{ proxmox_vm_templates }}"

  - name: Create Proxmox VM template custom field of type selection
    netbox.netbox.netbox_custom_field:
      netbox_url: "{{ secrets_cfg.netbox.api_proto }}://{{ secrets_cfg.netbox.api_host }}:{{ secrets_cfg.netbox.api_port}}"
      netbox_token: "{{ secrets_cfg.netbox.api_token }}"
      data:
        name: "proxmox_vm_template"
        label: "Proxmox VM Template"
        required: true
        content_types:
          - virtualization.virtualmachine
        type: select
        choice_set: "Proxmox VM Templates"

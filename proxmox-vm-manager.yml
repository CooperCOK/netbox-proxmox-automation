- name: "BIND9: Set BIND9 directory where zone dbs are stored"
  connection: local
  hosts: localhost
  gather_facts: False

  tasks:
  - name: Collect secrets
    include_vars:
      file: secrets.yml
      name: secrets_cfg

  - name: Read Proxmox VM Configuration
    include_vars:
      file: vms.yml
      name: proxmox_vm_cfg

  - name: Init dict(s)
    set_fact:
      remote_bind9_zone_db_directory: "{{ proxmox_vm_cfg.remote_bind9_zone_db_directory }}"
    when: (proxmox_vm_cfg.update_dns is defined and proxmox_vm_cfg.update_dns) and (proxmox_vm_cfg.dns_integrations | length > 0 and 'bind9' in proxmox_vm_cfg.dns_integrations)

- name: "NetBox-Proxmox VM Manager: Create VM(s)"
  connection: local
  hosts: localhost
  gather_facts: False
  
  vars:
    vm_config: {}
    collected_proxmox_vms: {}
    proxmox_vm_create: []
    proxmox_all_vm_interfaces: {}
    proxmox_vm_interfaces_prefix: []
    proxmox_vm_interfaces_ip: []
    nb_collected_staged_vms: {}
    nb_collected_active_vms: {}
    nb_vm_inventory: {}
    nb_vm_inventory_staged: {}
    nb_vm_created: {}
    nb_vm_interface_assigned_ip: {}
    nb_vm_config_disks: []
    nb_vm_collected_disks: []
    nb_vm_active: []
    nb_dns_plugin_zn: {}
    nb_dns_plugin_soa: {}
    nb_dns_plugin_ns: {}
    nb_dns_plugin_mx: {}
    nb_dns_plugin_mx_dol: []
    nb_dns_plugin_rr: {}
    nb_dns_plugin_rr_dol: []
    nb_dns_plugin_changed: false
    tmp_dns_zone_dir: ''    
    proxmox_ipconfig_dict: {}
    gw_last_quad: 1
    update_dns: false

  tasks:
  - name: Collect secrets
    include_vars:
      file: secrets.yml
      name: secrets_cfg

  - name: Read Proxmox VM Configuration
    include_vars:
      file: vms.yml
      name: proxmox_vm_cfg

  - name: Set update DNS flag (create)
    set_fact:
      update_dns: "{{ proxmox_vm_cfg.update_dns }}"

  - name: "Proxmox: Discover VMs"
    include_tasks: "ansible-tasks/proxmox/discover-vms.yml"

  - name: "NetBox: Collect active VMs"
    include_tasks: "ansible-tasks/netbox/collect-active-vms.yml"

  - name: "NetBox: Collect staged VMs"
    include_tasks: "ansible-tasks/netbox/collect-staged-vms.yml"

  - name: "NetBox: Create (Proxmox) VMs"
    include_tasks: "ansible-tasks/netbox/create-vms.yml"

  - name: "NetBox: Check Prefix and IP settings for Proxmox VMs"
    include_tasks: "ansible-tasks/netbox/prefix-ip-checker.yml"

  - name: debug it
    debug:
      msg: "{{ nb_collected_staged_vms }} ||| {{ nb_vm_created }} ||| {{ nb_collected_active_vms}}"

  - name: Collect VM(s) to create/start
    set_fact:
      vm_config: "{{ vm_config | combine({item.name: {'template': item.template, 'vcpus': item.vcpus, 'memory': item.memory, 'disks': item.disks, 'sshkey': item.sshkey, 'storage': item.storage if item.storage is defined else proxmox_vm_cfg.default_storage, 'start': item.start if item.start is defined else default_vm_start_state, 'gw': item.gw if item.gw is defined else gw_last_quad}}) }}"
    with_items: "{{ proxmox_vm_cfg.vms }}"
    when: item.exists and (nb_collected_staged_vms[item.name] is defined or nb_collected_active_vms[item.name] is defined or nb_vm_created[item.name] is defined)

  - name: "NetBox: Create (Proxmox) VMs Network Interfaces"
    include_tasks: "ansible-tasks/netbox/create-network-interfaces.yml"

  - name: "NetBox: Create IPs (by prefix) for (Proxmox) VMs Network Interfaces"
    include_tasks: "ansible-tasks/netbox/create-ips-by-prefix.yml"
    when: vm_config | length > 0

  - name: "NetBox: Create IPs (static) for (Proxmox) VMs Network Interfaces"
    include_tasks: "ansible-tasks/netbox/create-static-ips.yml"
    when: vm_config | length > 0

  - name: "NetBox: Update primary_ip4 for (Proxmox) VMs"
    include_tasks: "ansible-tasks/netbox/update-primary-ip4.yml"
    when: vm_config | length > 0

  - name: "NetBox: Add disks to VMs"
    include_tasks: "ansible-tasks/netbox/create-vms-disks.yml"
    when: vm_config | length > 0

  - name: "NetBox: Staged VM inventory"
    include_tasks: "ansible-tasks/netbox/get-staged-vm-status.yml"
    when: vm_config | length > 0

  - name: "Proxmox: Clone VMs"
    include_tasks: "ansible-tasks/proxmox/clone-vms.yml"
    when: vm_config | length > 0

  - name: "Proxmox: VMs update resource settings (CPU, memory, etc)"
    include_tasks: "ansible-tasks/proxmox/vm-resource-settings.yml"
    when: vm_config | length > 0

  - name: "Proxmox: VMs update sshkeys settings"
    include_tasks: "ansible-tasks/proxmox/vm-ssh-key-settings.yml"
    when: vm_config | length > 0

  - name: "Proxmox: VMs IP address settings"
    include_tasks: "ansible-tasks/proxmox/vm-ip-settings.yml"
    when: vm_config | length > 0

  - name: "Proxmox: Grow VM disks"
    include_tasks: "ansible-tasks/proxmox/grow-vm-disk.yml"
    when: vm_config | length > 0

  - name: "Proxmox: Add VM disks"
    include_tasks: "ansible-tasks/proxmox/add-vm-disks.yml"
    when: vm_config | length > 0

  - name: "NetBox: Set specified VMs to Active"
    include_tasks: "ansible-tasks/netbox/set-vms-active.yml"
    when: vm_config | length > 0

  - name: "Proxmox: Start specified VMs"
    include_tasks: "ansible-tasks/proxmox/start-vms.yml"
    when: vm_config | length > 0

  - name: "NetBox: Find DNS zones via netbox-dns plugin"
    include_tasks: "ansible-tasks/netbox/find-dns-zones.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns and vm_config | length > 0

  - name: "NetBox: Create DNS entries via netbox-dns plugin"
    include_tasks: "ansible-tasks/netbox/create-dns-record.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns and vm_config | length > 0

  - name: "NetBox: Find DNS zones SOA via netbox-dns plugin"
    include_tasks: "ansible-tasks/netbox/find-dns-zones-info.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns and vm_config | length > 0

  - name: "BIND9: Create (DNS) zone dbs"
    include_tasks: "ansible-tasks/dns/bind9/create-zone-files.yml"
    when: (proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns is defined and proxmox_vm_cfg.update_dns) and (proxmox_vm_cfg.dns_integrations | length > 0 and 'bind9' in proxmox_vm_cfg.dns_integrations) and vm_config | length > 0

- name: "NetBox-Proxmox VM Manager: Delete VM(s)"
  connection: local
  hosts: localhost
  gather_facts: False

  vars:
    vm_config_remove: {}
    collected_proxmox_vms: {}
    proxmox_vm_delete: []
    nb_collected_active_vms: {}
    nb_remove_vms: {}
    nb_vm_stopped: []
    nb_vm_offline: []
    nb_vm_decomissioning: []
    nb_dns_plugin_zn: {}
    nb_dns_plugin_soa: {}
    nb_dns_plugin_ns: {}
    nb_dns_plugin_mx: {}
    nb_dns_plugin_mx_dol: []
    nb_dns_plugin_rr: {}
    nb_dns_plugin_rr_dol: []
    nb_dns_plugin_deleted: false
    tmp_dns_zone_dir: ''    
    nb_dns_plugin_delete_record_ids: {}
    update_dns: false

  tasks:
  - name: Collect secrets
    include_vars:
      file: secrets.yml
      name: secrets_cfg

  - name: Read Proxmox VM Configuration
    include_vars:
      file: vms.yml
      name: proxmox_vm_cfg

  - name: Set update DNS flag (remove)
    set_fact:
      update_dns: "{{ proxmox_vm_cfg.update_dns }}"

  - name: "NetBox: Collect active VMs"
    include_tasks: "ansible-tasks/netbox/collect-active-vms.yml"

  - name: Collect VM(s) to remove
    set_fact:
      vm_config_remove: "{{ vm_config_remove | combine({item.name: True }) }}"
    with_items: "{{ proxmox_vm_cfg.vms }}"
    when: not item.exists and nb_collected_active_vms[item.name] is defined

  - name: "NetBox: Set VMs to decommissioning"
    include_tasks: "ansible-tasks/netbox/set-vms-decommissioning.yml"
    when: vm_config_remove | length > 0

  - name: "NetBox: Find DNS zones via netbox-dns plugin"
    include_tasks: "ansible-tasks/netbox/find-dns-zones.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns and vm_config_remove | length > 0

  - name: "NetBox: Delete DNS records (netbox-dns plugin)"
    include_tasks: "ansible-tasks/netbox/delete-dns-record.yml"
    when: vm_config_remove | length > 0 and proxmox_vm_cfg.update_dns is defined and proxmox_vm_cfg.update_dns

  - name: "NetBox: Find DNS zones SOA via netbox-dns plugin"
    include_tasks: "ansible-tasks/netbox/find-dns-zones-info.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns and vm_config_remove | length > 0

  - name: "BIND9: Create (DNS) zone dbs"
    include_tasks: "ansible-tasks/dns/bind9/create-zone-files.yml"
    when: proxmox_vm_cfg is defined and proxmox_vm_cfg.update_dns is defined and (proxmox_vm_cfg.update_dns and 'bind9' in proxmox_vm_cfg.dns_integrations) and vm_config_remove | length > 0

  - name: "NetBox: Set VMs to offline"
    include_tasks: "ansible-tasks/netbox/set-vms-offline.yml"
    when: vm_config_remove | length > 0

  - name: "Proxmox: Stop specified VMs"
    include_tasks: "ansible-tasks/proxmox/stop-vms.yml"
    when: vm_config_remove | length > 0 and nb_vm_offline | length > 0

  - name: "Proxmox: Remove specified VMs"
    include_tasks: "ansible-tasks/proxmox/remove-vms.yml"
    when: vm_config_remove | length > 0 and nb_vm_offline | length > 0

  - name: "NetBox: Remove deleted VMs"
    include_tasks: "ansible-tasks/netbox/remove-vms.yml"
    when: vm_config_remove | length > 0 and nb_vm_offline | length > 0

- name: "BIND9: propagate DNS changes"
  connection: paramiko
  hosts: dns
  gather_facts: False

  tasks:
    - name: Copy Bind9 (DNS) zone files
      become: true
      copy:
        src: "{{ item }}"
        dest: "{{ hostvars['localhost']['remote_bind9_zone_db_directory'] }}"
        owner: "bind"
        group: "bind"
        mode: 0600
      with_fileglob:
        - "{{ hostvars['localhost']['tmp_dns_zone_dir'] }}/db.*"
      when: hostvars['localhost'].update_dns and ((hostvars['localhost']['nb_dns_plugin_changed'] is defined and hostvars['localhost']['nb_dns_plugin_changed']) or (hostvars['localhost']['nb_dns_plugin_deleted'] is defined and hostvars['localhost']['nb_dns_plugin_deleted'])) and hostvars['localhost']['tmp_dns_zone_dir'] is defined
      notify:
        - Restart bind9

  handlers:
    - name: Restart bind9
      become: true
      service:
        name: bind9
        state: restarted
      when: (hostvars['localhost']['nb_dns_plugin_changed'] is defined and hostvars['localhost']['nb_dns_plugin_changed']) or (hostvars['localhost']['nb_dns_plugin_deleted'] is defined and hostvars['localhost']['nb_dns_plugin_deleted'])

- name: Clean up
  connection: local
  hosts: localhost
  gather_facts: False

  tasks:
  - name: "BIND9: remove temporary (DNS) zone db files"
    include_tasks: "ansible-tasks/dns/bind9/clean-up-temp-directory.yml"
